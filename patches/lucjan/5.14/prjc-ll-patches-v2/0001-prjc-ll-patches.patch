From c3228c1eace5dd25a2b65bae9545ddb3f4ce2d24 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Mon, 28 Sep 2020 20:20:29 +0200
Subject: [PATCH 1/4] sched/alt: Export can_nice symbol for Android Binder IPC

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 kernel/sched/alt_core.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 56aed2b1e42c..4cf8f14157f4 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -4883,6 +4883,7 @@ int can_nice(const struct task_struct *p, const int nice)
 	return (nice_rlim <= task_rlimit(p, RLIMIT_NICE) ||
 		capable(CAP_SYS_NICE));
 }
+EXPORT_SYMBOL_GPL(can_nice);
 
 #ifdef __ARCH_WANT_SYS_NICE
 
-- 
2.33.0.328.g8b7c11b866


From 74a4ca7ca96eb6698a67ecf3f493d7e6e2d007b8 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Thu, 29 Apr 2021 02:53:36 +0200
Subject: [PATCH 2/4] sched/alt: Add MG-LRU changes through ifdef macro

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 kernel/sched/alt_core.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 4cf8f14157f4..e9150b0b95ea 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -3311,6 +3311,9 @@ context_switch(struct rq *rq, struct task_struct *prev,
 		 * finish_task_switch()'s mmdrop().
 		 */
 		switch_mm_irqs_off(prev->active_mm, next->mm, next);
+#ifdef CONFIG_LRU_GEN
+		lru_gen_switch_mm(prev->active_mm, next->mm);
+#endif
 
 		if (!prev->mm) {                        // from kernel
 			/* will mmdrop() in finish_task_switch(). */
@@ -6356,6 +6359,9 @@ void idle_task_exit(void)
 
 	if (mm != &init_mm) {
 		switch_mm(mm, &init_mm, current);
+#ifdef CONFIG_LRU_GEN
+		lru_gen_switch_mm(mm, &init_mm);
+#endif
 		finish_arch_post_lock_switch();
 	}
 
-- 
2.33.0.328.g8b7c11b866


From 2ec728e94119bddbc0308e50882d275a3e6cce24 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Thu, 17 Sep 2020 01:38:47 +0200
Subject: [PATCH 3/4] init, Kconfig: set default value of SCHED_PDS

Prefer PDS to BMQ by default due to better CPU utilisation & higher throughput.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 init/Kconfig | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/init/Kconfig b/init/Kconfig
index 9a9b244d3ca3..76e14071b297 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -796,7 +796,7 @@ if SCHED_ALT
 
 choice
 	prompt "Alternative CPU Scheduler"
-	default SCHED_BMQ
+	default SCHED_PDS
 
 config SCHED_BMQ
 	bool "BMQ CPU scheduler"
-- 
2.33.0.328.g8b7c11b866


From 0e14a704fd6d91d2feffea7fd760803e85b7768a Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Mon, 21 Sep 2020 17:26:14 +0200
Subject: [PATCH 4/4] init, Kconfig: Restore original PDS description

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 init/Kconfig | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/init/Kconfig b/init/Kconfig
index 76e14071b297..372d6ed7d974 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -809,7 +809,9 @@ config SCHED_PDS
 	bool "PDS CPU scheduler"
 	help
 	  The Priority and Deadline based Skip list multiple queue CPU
-	  Scheduler.
+	  scheduler for excellent interactivity and responsiveness on the
+	  desktop and solid scalability on normal hardware and commodity
+	  servers.
 
 endchoice
 
-- 
2.33.0.328.g8b7c11b866

