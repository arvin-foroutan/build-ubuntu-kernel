From 3bfc985421cffa80356cb726e7430b7b4432d6bc Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Thu, 2 Sep 2021 17:21:33 +0200
Subject: [PATCH 57/70] Revert "block, bfq: add support to track if root_group
 have any pending requests"

This reverts commit 3bd122fe443c9f608379441e5144f33e7c1181cf.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 block/bfq-iosched.c |  8 +-------
 block/bfq-iosched.h | 13 ++-----------
 block/bfq-wf2q.c    | 36 ++++++++++++------------------------
 3 files changed, 15 insertions(+), 42 deletions(-)

diff --git a/block/bfq-iosched.c b/block/bfq-iosched.c
index bf2e83f48..c527885b9 100644
--- a/block/bfq-iosched.c
+++ b/block/bfq-iosched.c
@@ -967,14 +967,8 @@ void __bfq_weights_tree_remove(struct bfq_data *bfqd,
 void bfq_weights_tree_remove(struct bfq_data *bfqd,
 			     struct bfq_queue *bfqq)
 {
-	struct bfq_entity *entity = &bfqq->entity;
-
-	if (entity->in_groups_with_pending_reqs) {
-		entity->in_groups_with_pending_reqs = false;
-		bfqd->num_queues_with_pending_reqs_in_root--;
-	}
+	struct bfq_entity *entity = bfqq->entity.parent;
 
-	entity = entity->parent;
 	for_each_entity(entity) {
 		struct bfq_sched_data *sd = entity->my_sched_data;
 
diff --git a/block/bfq-iosched.h b/block/bfq-iosched.h
index 30ae967e0..126a6c523 100644
--- a/block/bfq-iosched.h
+++ b/block/bfq-iosched.h
@@ -200,12 +200,7 @@ struct bfq_entity {
 	/* flag, set to request a weight, ioprio or ioprio_class change  */
 	int prio_changed;
 
-	/*
-	 * If entity represents bfq_group, this flag will set if the group is
-	 * not root_group and have any pending requests; If entity represents
-	 * bfq_queue, this flag will set if the queue is in root_group and have
-	 * any pending requests.
-	 */
+	/* flag, set if the entity is counted in groups_with_pending_reqs */
 	bool in_groups_with_pending_reqs;
 
 	/* last child queue of entity created (for non-leaf entities) */
@@ -549,11 +544,7 @@ struct bfq_data {
 	 * with no request waiting for completion.
 	 */
 	unsigned int num_groups_with_pending_reqs;
-	/*
-	 * number of queues that are in root_group with at least one request
-	 * waiting for completion.
-	 */
-	unsigned int num_queues_with_pending_reqs_in_root;
+
 	/*
 	 * Per-class (RT, BE, IDLE) number of bfq_queues containing
 	 * requests (including the queue in service, even if it is
diff --git a/block/bfq-wf2q.c b/block/bfq-wf2q.c
index a4536329d..99219c1c5 100644
--- a/block/bfq-wf2q.c
+++ b/block/bfq-wf2q.c
@@ -956,29 +956,6 @@ static void bfq_update_fin_time_enqueue(struct bfq_entity *entity,
 	bfq_active_insert(st, entity);
 }
 
-static void bfq_update_groups_with_pending_reqs(struct bfq_entity *entity)
-{
-#ifdef CONFIG_BFQ_GROUP_IOSCHED
-	struct bfq_queue *bfqq = bfq_entity_to_bfqq(entity);
-
-	if (bfqq) {
-		if (!entity->parent && !entity->in_groups_with_pending_reqs) {
-			entity->in_groups_with_pending_reqs = true;
-			bfqq->bfqd->num_queues_with_pending_reqs_in_root++;
-		}
-	} else {
-		if (!entity->in_groups_with_pending_reqs) {
-			struct bfq_group *bfqg =
-				container_of(entity, struct bfq_group, entity);
-			struct bfq_data *bfqd = bfqg->bfqd;
-
-			entity->in_groups_with_pending_reqs = true;
-			bfqd->num_groups_with_pending_reqs++;
-		}
-	}
-#endif
-}
-
 /**
  * __bfq_activate_entity - handle activation of entity.
  * @entity: the entity being activated.
@@ -1032,7 +1009,18 @@ static void __bfq_activate_entity(struct bfq_entity *entity,
 		entity->on_st_or_in_serv = true;
 	}
 
-	bfq_update_groups_with_pending_reqs(entity);
+#ifdef CONFIG_BFQ_GROUP_IOSCHED
+	if (!bfq_entity_to_bfqq(entity)) { /* bfq_group */
+		struct bfq_group *bfqg = bfq_entity_to_bfqg(entity);
+		struct bfq_data *bfqd = bfqg->bfqd;
+
+		if (!entity->in_groups_with_pending_reqs) {
+			entity->in_groups_with_pending_reqs = true;
+			bfqd->num_groups_with_pending_reqs++;
+		}
+	}
+#endif
+
 	bfq_update_fin_time_enqueue(entity, st, backshifted);
 }
 
-- 
2.33.0.610.gcefe983a32

