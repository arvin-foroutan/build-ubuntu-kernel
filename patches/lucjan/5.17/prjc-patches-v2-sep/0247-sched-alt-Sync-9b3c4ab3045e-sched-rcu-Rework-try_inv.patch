From f3c6df09db74ef1bc21e493026e42159046be6c0 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Fri, 25 Mar 2022 22:07:37 +0000
Subject: [PATCH 247/265] sched/alt: [Sync] 9b3c4ab3045e sched,rcu: Rework
 try_invoke_on_locked_down_task()

---
 kernel/sched/alt_core.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index fbb46f7c98ce..4c02602ea9ab 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -2816,7 +2816,7 @@ static int try_to_wake_up(struct task_struct *p, unsigned int state,
 }
 
 /**
- * try_invoke_on_locked_down_task - Invoke a function on task in fixed state
+ * task_call_func - Invoke a function on task in fixed state
  * @p: Process for which the function is to be invoked, can be @current.
  * @func: Function to invoke.
  * @arg: Argument to function.
@@ -2829,12 +2829,12 @@ static int try_to_wake_up(struct task_struct *p, unsigned int state,
  * Returns:
  *   Whatever @func returns
  */
-bool try_invoke_on_locked_down_task(struct task_struct *p, bool (*func)(struct task_struct *t, void *arg), void *arg)
+int task_call_func(struct task_struct *p, task_call_f func, void *arg)
 {
 	struct rq *rq = NULL;
 	unsigned int state;
 	struct rq_flags rf;
-	bool ret = false;
+	int ret;
 
 	raw_spin_lock_irqsave(&p->pi_lock, rf.flags);
 
-- 
2.35.1.677.gabf474a5dd

