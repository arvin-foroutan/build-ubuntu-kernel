From 93bb7b23a517ceaa5728ccaa5f35c1e56ad29792 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Fri, 25 Mar 2022 10:43:13 +0000
Subject: [PATCH 241/269] sched/alt: [Sync] ceeadb83aea2 sched: Make struct
 sched_statistics independent of fair sched class

---
 kernel/sched/alt_core.c  | 16 +++++++++++++---
 kernel/sched/alt_sched.h |  1 +
 kernel/sched/stats.h     |  2 ++
 3 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index ff4a45708a68..f783788e3caa 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -28,7 +28,6 @@
 #include <linux/kprobes.h>
 #include <linux/mmu_context.h>
 #include <linux/nmi.h>
-#include <linux/profile.h>
 #include <linux/rcupdate_wait.h>
 #include <linux/security.h>
 #include <linux/syscalls.h>
@@ -2236,9 +2235,10 @@ ttwu_stat(struct task_struct *p, int cpu, int wake_flags)
 	rq = this_rq();
 
 #ifdef CONFIG_SMP
-	if (cpu == rq->cpu)
+	if (cpu == rq->cpu) {
 		__schedstat_inc(rq->ttwu_local);
-	else {
+		__schedstat_inc(p->stats.nr_wakeups_local);
+	} else {
 		/** Alt schedule FW ToDo:
 		 * How to do ttwu_wake_remote
 		 */
@@ -2246,6 +2246,7 @@ ttwu_stat(struct task_struct *p, int cpu, int wake_flags)
 #endif /* CONFIG_SMP */
 
 	__schedstat_inc(rq->ttwu_count);
+	__schedstat_inc(p->stats.nr_wakeups);
 }
 
 /*
@@ -2895,6 +2896,11 @@ static inline void __sched_fork(unsigned long clone_flags, struct task_struct *p
 	p->stime			= 0;
 	p->sched_time			= 0;
 
+#ifdef CONFIG_SCHEDSTATS
+	/* Even if schedstat is disabled, there should not be garbage */
+	memset(&p->stats, 0, sizeof(p->stats));
+#endif
+
 #ifdef CONFIG_PREEMPT_NOTIFIERS
 	INIT_HLIST_HEAD(&p->preempt_notifiers);
 #endif
@@ -7397,6 +7403,10 @@ void normalize_rt_tasks(void)
 		if (p->flags & PF_KTHREAD)
 			continue;
 
+		schedstat_set(p->stats.wait_start,  0);
+		schedstat_set(p->stats.sleep_start, 0);
+		schedstat_set(p->stats.block_start, 0);
+
 		if (!rt_task(p)) {
 			/*
 			 * Renice negative nice level userspace
diff --git a/kernel/sched/alt_sched.h b/kernel/sched/alt_sched.h
index 289058a09bd5..f2b9e686d6a6 100644
--- a/kernel/sched/alt_sched.h
+++ b/kernel/sched/alt_sched.h
@@ -31,6 +31,7 @@
 #include <linux/livepatch.h>
 #include <linux/membarrier.h>
 #include <linux/proc_fs.h>
+#include <linux/profile.h>
 #include <linux/psi.h>
 #include <linux/slab.h>
 #include <linux/stop_machine.h>
diff --git a/kernel/sched/stats.h b/kernel/sched/stats.h
index 3a3c826dd83a..d80520eca556 100644
--- a/kernel/sched/stats.h
+++ b/kernel/sched/stats.h
@@ -87,6 +87,7 @@ static inline void rq_sched_info_depart  (struct rq *rq, unsigned long long delt
 
 #endif /* CONFIG_SCHEDSTATS */
 
+#ifndef CONFIG_SCHED_ALT
 #ifdef CONFIG_FAIR_GROUP_SCHED
 struct sched_entity_stats {
 	struct sched_entity     se;
@@ -103,6 +104,7 @@ __schedstats_from_se(struct sched_entity *se)
 #endif
 	return &task_of(se)->stats;
 }
+#endif /* CONFIG_SCHED_ALT */
 
 #ifdef CONFIG_PSI
 /*
-- 
2.35.1.677.gabf474a5dd

