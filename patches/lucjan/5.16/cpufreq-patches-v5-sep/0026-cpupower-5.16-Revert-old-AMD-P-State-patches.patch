From 80a799ad9ef34eaaab90fca536ac5b72b6d44ec6 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Thu, 24 Feb 2022 02:04:08 +0100
Subject: [PATCH 26/36] cpupower-5.16: Revert old AMD P-State patches

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 drivers/cpufreq/Kconfig.x86                   |  6 +-
 tools/power/cpupower/Makefile                 |  6 +-
 tools/power/cpupower/lib/acpi_cppc.c          | 59 -------------
 tools/power/cpupower/lib/acpi_cppc.h          | 21 -----
 tools/power/cpupower/lib/cpufreq.c            | 21 ++---
 tools/power/cpupower/lib/cpufreq.h            | 12 ---
 .../cpupower/man/cpupower-frequency-info.1    |  3 -
 tools/power/cpupower/utils/cpufreq-info.c     | 87 +++++++++++--------
 tools/power/cpupower/utils/helpers/amd.c      | 77 ----------------
 tools/power/cpupower/utils/helpers/cpuid.c    | 13 ---
 tools/power/cpupower/utils/helpers/helpers.h  | 22 -----
 tools/power/cpupower/utils/helpers/misc.c     | 62 -------------
 12 files changed, 64 insertions(+), 325 deletions(-)
 delete mode 100644 tools/power/cpupower/lib/acpi_cppc.c
 delete mode 100644 tools/power/cpupower/lib/acpi_cppc.h

diff --git a/drivers/cpufreq/Kconfig.x86 b/drivers/cpufreq/Kconfig.x86
index 55516043b..a951768c3 100644
--- a/drivers/cpufreq/Kconfig.x86
+++ b/drivers/cpufreq/Kconfig.x86
@@ -36,9 +36,9 @@ config X86_PCC_CPUFREQ
 
 config X86_AMD_PSTATE
 	tristate "AMD Processor P-State driver"
-	depends on X86 && ACPI
-	select ACPI_PROCESSOR
-	select ACPI_CPPC_LIB if X86_64
+	depends on X86
+	select ACPI_PROCESSOR if ACPI
+	select ACPI_CPPC_LIB if X86_64 && ACPI
 	select CPU_FREQ_GOV_SCHEDUTIL if SMP
 	help
 	  This driver adds a CPUFreq driver which utilizes a fine grain
diff --git a/tools/power/cpupower/Makefile b/tools/power/cpupower/Makefile
index e9b6de314..3b1594447 100644
--- a/tools/power/cpupower/Makefile
+++ b/tools/power/cpupower/Makefile
@@ -143,9 +143,9 @@ UTIL_HEADERS = utils/helpers/helpers.h utils/idle_monitor/cpupower-monitor.h \
 	utils/helpers/bitmask.h \
 	utils/idle_monitor/idle_monitors.h utils/idle_monitor/idle_monitors.def
 
-LIB_HEADERS = 	lib/cpufreq.h lib/cpupower.h lib/cpuidle.h lib/acpi_cppc.h
-LIB_SRC = 	lib/cpufreq.c lib/cpupower.c lib/cpuidle.c lib/acpi_cppc.c
-LIB_OBJS = 	lib/cpufreq.o lib/cpupower.o lib/cpuidle.o lib/acpi_cppc.o
+LIB_HEADERS = 	lib/cpufreq.h lib/cpupower.h lib/cpuidle.h
+LIB_SRC = 	lib/cpufreq.c lib/cpupower.c lib/cpuidle.c
+LIB_OBJS = 	lib/cpufreq.o lib/cpupower.o lib/cpuidle.o
 LIB_OBJS :=	$(addprefix $(OUTPUT),$(LIB_OBJS))
 
 override CFLAGS +=	-pipe
diff --git a/tools/power/cpupower/lib/acpi_cppc.c b/tools/power/cpupower/lib/acpi_cppc.c
deleted file mode 100644
index a07a8922e..000000000
--- a/tools/power/cpupower/lib/acpi_cppc.c
+++ /dev/null
@@ -1,59 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0-only
-
-#include <stdio.h>
-#include <errno.h>
-#include <stdlib.h>
-#include <string.h>
-#include <sys/types.h>
-#include <sys/stat.h>
-#include <fcntl.h>
-#include <unistd.h>
-
-#include "cpupower_intern.h"
-#include "acpi_cppc.h"
-
-/* ACPI CPPC sysfs access ***********************************************/
-
-static int acpi_cppc_read_file(unsigned int cpu, const char *fname,
-			       char *buf, size_t buflen)
-{
-	char path[SYSFS_PATH_MAX];
-
-	snprintf(path, sizeof(path), PATH_TO_CPU "cpu%u/acpi_cppc/%s",
-		 cpu, fname);
-	return cpupower_read_sysfs(path, buf, buflen);
-}
-
-static const char *acpi_cppc_value_files[] = {
-	[HIGHEST_PERF] = "highest_perf",
-	[LOWEST_PERF] = "lowest_perf",
-	[NOMINAL_PERF] = "nominal_perf",
-	[LOWEST_NONLINEAR_PERF] = "lowest_nonlinear_perf",
-	[LOWEST_FREQ] = "lowest_freq",
-	[NOMINAL_FREQ] = "nominal_freq",
-	[REFERENCE_PERF] = "reference_perf",
-	[WRAPAROUND_TIME] = "wraparound_time"
-};
-
-unsigned long acpi_cppc_get_data(unsigned cpu, enum acpi_cppc_value which)
-{
-	unsigned long long value;
-	unsigned int len;
-	char linebuf[MAX_LINE_LEN];
-	char *endp;
-
-	if (which >= MAX_CPPC_VALUE_FILES)
-		return 0;
-
-	len = acpi_cppc_read_file(cpu, acpi_cppc_value_files[which],
-				  linebuf, sizeof(linebuf));
-	if (len == 0)
-		return 0;
-
-	value = strtoull(linebuf, &endp, 0);
-
-	if (endp == linebuf || errno == ERANGE)
-		return 0;
-
-	return value;
-}
diff --git a/tools/power/cpupower/lib/acpi_cppc.h b/tools/power/cpupower/lib/acpi_cppc.h
deleted file mode 100644
index 576291155..000000000
--- a/tools/power/cpupower/lib/acpi_cppc.h
+++ /dev/null
@@ -1,21 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0-only */
-
-#ifndef __ACPI_CPPC_H__
-#define __ACPI_CPPC_H__
-
-enum acpi_cppc_value {
-	HIGHEST_PERF,
-	LOWEST_PERF,
-	NOMINAL_PERF,
-	LOWEST_NONLINEAR_PERF,
-	LOWEST_FREQ,
-	NOMINAL_FREQ,
-	REFERENCE_PERF,
-	WRAPAROUND_TIME,
-	MAX_CPPC_VALUE_FILES
-};
-
-extern unsigned long acpi_cppc_get_data(unsigned cpu,
-					enum acpi_cppc_value which);
-
-#endif /* _ACPI_CPPC_H */
diff --git a/tools/power/cpupower/lib/cpufreq.c b/tools/power/cpupower/lib/cpufreq.c
index c011bca27..c3b56db8b 100644
--- a/tools/power/cpupower/lib/cpufreq.c
+++ b/tools/power/cpupower/lib/cpufreq.c
@@ -83,21 +83,20 @@ static const char *cpufreq_value_files[MAX_CPUFREQ_VALUE_READ_FILES] = {
 	[STATS_NUM_TRANSITIONS] = "stats/total_trans"
 };
 
-unsigned long cpufreq_get_sysfs_value_from_table(unsigned int cpu,
-						 const char **table,
-						 unsigned index,
-						 unsigned size)
+
+static unsigned long sysfs_cpufreq_get_one_value(unsigned int cpu,
+						 enum cpufreq_value which)
 {
 	unsigned long value;
 	unsigned int len;
 	char linebuf[MAX_LINE_LEN];
 	char *endp;
 
-	if (!table || index >= size || !table[index])
+	if (which >= MAX_CPUFREQ_VALUE_READ_FILES)
 		return 0;
 
-	len = sysfs_cpufreq_read_file(cpu, table[index], linebuf,
-				      sizeof(linebuf));
+	len = sysfs_cpufreq_read_file(cpu, cpufreq_value_files[which],
+				linebuf, sizeof(linebuf));
 
 	if (len == 0)
 		return 0;
@@ -110,14 +109,6 @@ unsigned long cpufreq_get_sysfs_value_from_table(unsigned int cpu,
 	return value;
 }
 
-static unsigned long sysfs_cpufreq_get_one_value(unsigned int cpu,
-						 enum cpufreq_value which)
-{
-	return cpufreq_get_sysfs_value_from_table(cpu, cpufreq_value_files,
-						  which,
-						  MAX_CPUFREQ_VALUE_READ_FILES);
-}
-
 /* read access to files which contain one string */
 
 enum cpufreq_string {
diff --git a/tools/power/cpupower/lib/cpufreq.h b/tools/power/cpupower/lib/cpufreq.h
index 107668c0c..95f4fd9e2 100644
--- a/tools/power/cpupower/lib/cpufreq.h
+++ b/tools/power/cpupower/lib/cpufreq.h
@@ -203,18 +203,6 @@ int cpufreq_modify_policy_governor(unsigned int cpu, char *governor);
 int cpufreq_set_frequency(unsigned int cpu,
 				unsigned long target_frequency);
 
-/*
- * get the sysfs value from specific table
- *
- * Read the value with the sysfs file name from specific table. Does
- * only work if the cpufreq driver has the specific sysfs interfaces.
- */
-
-unsigned long cpufreq_get_sysfs_value_from_table(unsigned int cpu,
-						 const char **table,
-						 unsigned index,
-						 unsigned size);
-
 #ifdef __cplusplus
 }
 #endif
diff --git a/tools/power/cpupower/man/cpupower-frequency-info.1 b/tools/power/cpupower/man/cpupower-frequency-info.1
index dd545b499..6aa8d239d 100644
--- a/tools/power/cpupower/man/cpupower-frequency-info.1
+++ b/tools/power/cpupower/man/cpupower-frequency-info.1
@@ -53,9 +53,6 @@ human\-readable output for the \-f, \-w, \-s and \-y parameters.
 \fB\-n\fR \fB\-\-no-rounding\fR
 Output frequencies and latencies without rounding off values.
 .TP  
-\fB\-c\fR \fB\-\-perf\fR
-Get performances and frequencies capabilities of CPPC, by reading it from hardware (only available on the hardware with CPPC).
-.TP
 .SH "REMARKS"
 .LP 
 By default only values of core zero are displayed. How to display settings of
diff --git a/tools/power/cpupower/utils/cpufreq-info.c b/tools/power/cpupower/utils/cpufreq-info.c
index 939298d85..f9895e31f 100644
--- a/tools/power/cpupower/utils/cpufreq-info.c
+++ b/tools/power/cpupower/utils/cpufreq-info.c
@@ -84,6 +84,43 @@ static void proc_cpufreq_output(void)
 }
 
 static int no_rounding;
+static void print_speed(unsigned long speed)
+{
+	unsigned long tmp;
+
+	if (no_rounding) {
+		if (speed > 1000000)
+			printf("%u.%06u GHz", ((unsigned int) speed/1000000),
+				((unsigned int) speed%1000000));
+		else if (speed > 1000)
+			printf("%u.%03u MHz", ((unsigned int) speed/1000),
+				(unsigned int) (speed%1000));
+		else
+			printf("%lu kHz", speed);
+	} else {
+		if (speed > 1000000) {
+			tmp = speed%10000;
+			if (tmp >= 5000)
+				speed += 10000;
+			printf("%u.%02u GHz", ((unsigned int) speed/1000000),
+				((unsigned int) (speed%1000000)/10000));
+		} else if (speed > 100000) {
+			tmp = speed%1000;
+			if (tmp >= 500)
+				speed += 1000;
+			printf("%u MHz", ((unsigned int) speed/1000));
+		} else if (speed > 1000) {
+			tmp = speed%100;
+			if (tmp >= 50)
+				speed += 100;
+			printf("%u.%01u MHz", ((unsigned int) speed/1000),
+				((unsigned int) (speed%1000)/100));
+		}
+	}
+
+	return;
+}
+
 static void print_duration(unsigned long duration)
 {
 	unsigned long tmp;
@@ -146,12 +183,9 @@ static int get_boost_mode_x86(unsigned int cpu)
 	printf(_("    Supported: %s\n"), support ? _("yes") : _("no"));
 	printf(_("    Active: %s\n"), active ? _("yes") : _("no"));
 
-	if (cpupower_cpu_info.vendor == X86_VENDOR_AMD &&
-	    cpupower_cpu_info.caps & CPUPOWER_CAP_AMD_PSTATE) {
-		amd_pstate_show_perf_and_freq(cpu, no_rounding);
-	} else if ((cpupower_cpu_info.vendor == X86_VENDOR_AMD &&
-		    cpupower_cpu_info.family >= 0x10) ||
-		   cpupower_cpu_info.vendor == X86_VENDOR_HYGON) {
+	if ((cpupower_cpu_info.vendor == X86_VENDOR_AMD &&
+	     cpupower_cpu_info.family >= 0x10) ||
+	     cpupower_cpu_info.vendor == X86_VENDOR_HYGON) {
 		ret = decode_pstates(cpu, b_states, pstates, &pstate_no);
 		if (ret)
 			return ret;
@@ -220,11 +254,11 @@ static int get_boost_mode(unsigned int cpu)
 	if (freqs) {
 		printf(_("  boost frequency steps: "));
 		while (freqs->next) {
-			print_speed(freqs->frequency, no_rounding);
+			print_speed(freqs->frequency);
 			printf(", ");
 			freqs = freqs->next;
 		}
-		print_speed(freqs->frequency, no_rounding);
+		print_speed(freqs->frequency);
 		printf("\n");
 		cpufreq_put_available_frequencies(freqs);
 	}
@@ -243,7 +277,7 @@ static int get_freq_kernel(unsigned int cpu, unsigned int human)
 		return -EINVAL;
 	}
 	if (human) {
-		print_speed(freq, no_rounding);
+		print_speed(freq);
 	} else
 		printf("%lu", freq);
 	printf(_(" (asserted by call to kernel)\n"));
@@ -262,7 +296,7 @@ static int get_freq_hardware(unsigned int cpu, unsigned int human)
 		return -EINVAL;
 	}
 	if (human) {
-		print_speed(freq, no_rounding);
+		print_speed(freq);
 	} else
 		printf("%lu", freq);
 	printf(_(" (asserted by call to hardware)\n"));
@@ -282,9 +316,9 @@ static int get_hardware_limits(unsigned int cpu, unsigned int human)
 
 	if (human) {
 		printf(_("  hardware limits: "));
-		print_speed(min, no_rounding);
+		print_speed(min);
 		printf(" - ");
-		print_speed(max, no_rounding);
+		print_speed(max);
 		printf("\n");
 	} else {
 		printf("%lu %lu\n", min, max);
@@ -316,9 +350,9 @@ static int get_policy(unsigned int cpu)
 		return -EINVAL;
 	}
 	printf(_("  current policy: frequency should be within "));
-	print_speed(policy->min, no_rounding);
+	print_speed(policy->min);
 	printf(_(" and "));
-	print_speed(policy->max, no_rounding);
+	print_speed(policy->max);
 
 	printf(".\n                  ");
 	printf(_("The governor \"%s\" may decide which speed to use\n"
@@ -402,7 +436,7 @@ static int get_freq_stats(unsigned int cpu, unsigned int human)
 	struct cpufreq_stats *stats = cpufreq_get_stats(cpu, &total_time);
 	while (stats) {
 		if (human) {
-			print_speed(stats->frequency, no_rounding);
+			print_speed(stats->frequency);
 			printf(":%.2f%%",
 				(100.0 * stats->time_in_state) / total_time);
 		} else
@@ -438,17 +472,6 @@ static int get_latency(unsigned int cpu, unsigned int human)
 	return 0;
 }
 
-/* --performance / -c */
-
-static int get_perf_cap(unsigned int cpu)
-{
-	if (cpupower_cpu_info.vendor == X86_VENDOR_AMD &&
-	    cpupower_cpu_info.caps & CPUPOWER_CAP_AMD_PSTATE)
-		amd_pstate_show_perf_and_freq(cpu, no_rounding);
-
-	return 0;
-}
-
 static void debug_output_one(unsigned int cpu)
 {
 	struct cpufreq_available_frequencies *freqs;
@@ -463,11 +486,11 @@ static void debug_output_one(unsigned int cpu)
 	if (freqs) {
 		printf(_("  available frequency steps:  "));
 		while (freqs->next) {
-			print_speed(freqs->frequency, no_rounding);
+			print_speed(freqs->frequency);
 			printf(", ");
 			freqs = freqs->next;
 		}
-		print_speed(freqs->frequency, no_rounding);
+		print_speed(freqs->frequency);
 		printf("\n");
 		cpufreq_put_available_frequencies(freqs);
 	}
@@ -477,7 +500,6 @@ static void debug_output_one(unsigned int cpu)
 	if (get_freq_hardware(cpu, 1) < 0)
 		get_freq_kernel(cpu, 1);
 	get_boost_mode(cpu);
-	get_perf_cap(cpu);
 }
 
 static struct option info_opts[] = {
@@ -496,7 +518,6 @@ static struct option info_opts[] = {
 	{"proc",	 no_argument,		 NULL,	 'o'},
 	{"human",	 no_argument,		 NULL,	 'm'},
 	{"no-rounding", no_argument,	 NULL,	 'n'},
-	{"performance", no_argument,	 NULL,	 'c'},
 	{ },
 };
 
@@ -510,7 +531,7 @@ int cmd_freq_info(int argc, char **argv)
 	int output_param = 0;
 
 	do {
-		ret = getopt_long(argc, argv, "oefwldpgrasmybnc", info_opts,
+		ret = getopt_long(argc, argv, "oefwldpgrasmybn", info_opts,
 				  NULL);
 		switch (ret) {
 		case '?':
@@ -533,7 +554,6 @@ int cmd_freq_info(int argc, char **argv)
 		case 'e':
 		case 's':
 		case 'y':
-		case 'c':
 			if (output_param) {
 				output_param = -1;
 				cont = 0;
@@ -640,9 +660,6 @@ int cmd_freq_info(int argc, char **argv)
 		case 'y':
 			ret = get_latency(cpu, human);
 			break;
-		case 'c':
-			ret = get_perf_cap(cpu);
-			break;
 		}
 		if (ret)
 			return ret;
diff --git a/tools/power/cpupower/utils/helpers/amd.c b/tools/power/cpupower/utils/helpers/amd.c
index 01ebf82ca..97f2c8570 100644
--- a/tools/power/cpupower/utils/helpers/amd.c
+++ b/tools/power/cpupower/utils/helpers/amd.c
@@ -8,10 +8,7 @@
 #include <pci/pci.h>
 
 #include "helpers/helpers.h"
-#include "cpufreq.h"
-#include "acpi_cppc.h"
 
-/* ACPI P-States Helper Functions for AMD Processors ***************/
 #define MSR_AMD_PSTATE_STATUS	0xc0010063
 #define MSR_AMD_PSTATE		0xc0010064
 #define MSR_AMD_PSTATE_LIMIT	0xc0010061
@@ -149,78 +146,4 @@ int amd_pci_get_num_boost_states(int *active, int *states)
 	pci_cleanup(pci_acc);
 	return 0;
 }
-
-/* ACPI P-States Helper Functions for AMD Processors ***************/
-
-/* AMD P-States Helper Functions ***************/
-enum amd_pstate_value {
-	AMD_PSTATE_HIGHEST_PERF,
-	AMD_PSTATE_MAX_FREQ,
-	AMD_PSTATE_LOWEST_NONLINEAR_FREQ,
-	MAX_AMD_PSTATE_VALUE_READ_FILES,
-};
-
-static const char *amd_pstate_value_files[MAX_AMD_PSTATE_VALUE_READ_FILES] = {
-	[AMD_PSTATE_HIGHEST_PERF] = "amd_pstate_highest_perf",
-	[AMD_PSTATE_MAX_FREQ] = "amd_pstate_max_freq",
-	[AMD_PSTATE_LOWEST_NONLINEAR_FREQ] = "amd_pstate_lowest_nonlinear_freq",
-};
-
-static unsigned long amd_pstate_get_data(unsigned int cpu,
-					 enum amd_pstate_value value)
-{
-	return cpufreq_get_sysfs_value_from_table(cpu,
-						  amd_pstate_value_files,
-						  value,
-						  MAX_AMD_PSTATE_VALUE_READ_FILES);
-}
-
-void amd_pstate_boost_init(unsigned int cpu, int *support, int *active)
-{
-	unsigned long highest_perf, nominal_perf, cpuinfo_min,
-		      cpuinfo_max, amd_pstate_max;
-
-	highest_perf = amd_pstate_get_data(cpu, AMD_PSTATE_HIGHEST_PERF);
-	nominal_perf = acpi_cppc_get_data(cpu, NOMINAL_PERF);
-
-	*support = highest_perf > nominal_perf ? 1 : 0;
-	if (!(*support))
-		return;
-
-	cpufreq_get_hardware_limits(cpu, &cpuinfo_min, &cpuinfo_max);
-	amd_pstate_max = amd_pstate_get_data(cpu, AMD_PSTATE_MAX_FREQ);
-
-	*active = cpuinfo_max == amd_pstate_max ? 1 : 0;
-}
-
-void amd_pstate_show_perf_and_freq(unsigned int cpu, int no_rounding)
-{
-	printf(_("    AMD PSTATE Highest Performance: %lu. Maximum Frequency: "),
-	       amd_pstate_get_data(cpu, AMD_PSTATE_HIGHEST_PERF));
-	/*
-	 * If boost isn't active, the cpuinfo_max doesn't indicate real max
-	 * frequency. So we read it back from amd-pstate sysfs entry.
-	 */
-	print_speed(amd_pstate_get_data(cpu, AMD_PSTATE_MAX_FREQ), no_rounding);
-	printf(".\n");
-
-	printf(_("    AMD PSTATE Nominal Performance: %lu. Nominal Frequency: "),
-	       acpi_cppc_get_data(cpu, NOMINAL_PERF));
-	print_speed(acpi_cppc_get_data(cpu, NOMINAL_FREQ) * 1000,
-		    no_rounding);
-	printf(".\n");
-
-	printf(_("    AMD PSTATE Lowest Non-linear Performance: %lu. Lowest Non-linear Frequency: "),
-	       acpi_cppc_get_data(cpu, LOWEST_NONLINEAR_PERF));
-	print_speed(amd_pstate_get_data(cpu, AMD_PSTATE_LOWEST_NONLINEAR_FREQ),
-		    no_rounding);
-	printf(".\n");
-
-	printf(_("    AMD PSTATE Lowest Performance: %lu. Lowest Frequency: "),
-	       acpi_cppc_get_data(cpu, LOWEST_PERF));
-	print_speed(acpi_cppc_get_data(cpu, LOWEST_FREQ) * 1000, no_rounding);
-	printf(".\n");
-}
-
-/* AMD P-States Helper Functions ***************/
 #endif /* defined(__i386__) || defined(__x86_64__) */
diff --git a/tools/power/cpupower/utils/helpers/cpuid.c b/tools/power/cpupower/utils/helpers/cpuid.c
index 2a6dc104e..72eb43593 100644
--- a/tools/power/cpupower/utils/helpers/cpuid.c
+++ b/tools/power/cpupower/utils/helpers/cpuid.c
@@ -149,19 +149,6 @@ int get_cpu_info(struct cpupower_cpu_info *cpu_info)
 		if (ext_cpuid_level >= 0x80000008 &&
 		    cpuid_ebx(0x80000008) & (1 << 4))
 			cpu_info->caps |= CPUPOWER_CAP_AMD_RDPRU;
-
-		if (cpupower_amd_pstate_enabled()) {
-			cpu_info->caps |= CPUPOWER_CAP_AMD_PSTATE;
-
-			/*
-			 * If AMD P-state is enabled, the firmware will treat
-			 * AMD P-state function as high priority.
-			 */
-			cpu_info->caps &= ~CPUPOWER_CAP_AMD_CPB;
-			cpu_info->caps &= ~CPUPOWER_CAP_AMD_CPB_MSR;
-			cpu_info->caps &= ~CPUPOWER_CAP_AMD_HW_PSTATE;
-			cpu_info->caps &= ~CPUPOWER_CAP_AMD_PSTATEDEF;
-		}
 	}
 
 	if (cpu_info->vendor == X86_VENDOR_INTEL) {
diff --git a/tools/power/cpupower/utils/helpers/helpers.h b/tools/power/cpupower/utils/helpers/helpers.h
index 5f6862502..33ffacee7 100644
--- a/tools/power/cpupower/utils/helpers/helpers.h
+++ b/tools/power/cpupower/utils/helpers/helpers.h
@@ -11,7 +11,6 @@
 
 #include <libintl.h>
 #include <locale.h>
-#include <stdbool.h>
 
 #include "helpers/bitmask.h"
 #include <cpupower.h>
@@ -74,7 +73,6 @@ enum cpupower_cpu_vendor {X86_VENDOR_UNKNOWN = 0, X86_VENDOR_INTEL,
 #define CPUPOWER_CAP_AMD_HW_PSTATE	0x00000100
 #define CPUPOWER_CAP_AMD_PSTATEDEF	0x00000200
 #define CPUPOWER_CAP_AMD_CPB_MSR	0x00000400
-#define CPUPOWER_CAP_AMD_PSTATE		0x00000800
 
 #define CPUPOWER_AMD_CPBDIS		0x02000000
 
@@ -137,16 +135,6 @@ extern int decode_pstates(unsigned int cpu, int boost_states,
 
 extern int cpufreq_has_boost_support(unsigned int cpu, int *support,
 				     int *active, int * states);
-
-/* AMD P-States stuff **************************/
-extern bool cpupower_amd_pstate_enabled(void);
-extern void amd_pstate_boost_init(unsigned int cpu,
-				  int *support, int *active);
-extern void amd_pstate_show_perf_and_freq(unsigned int cpu,
-					  int no_rounding);
-
-/* AMD P-States stuff **************************/
-
 /*
  * CPUID functions returning a single datum
  */
@@ -179,15 +167,6 @@ static inline int cpufreq_has_boost_support(unsigned int cpu, int *support,
 					    int *active, int * states)
 { return -1; }
 
-static inline bool cpupower_amd_pstate_enabled(void)
-{ return false; }
-static void amd_pstate_boost_init(unsigned int cpu,
-				  int *support, int *active)
-{ return; }
-static inline void amd_pstate_show_perf_and_freq(unsigned int cpu,
-						 int no_rounding)
-{ return; }
-
 /* cpuid and cpuinfo helpers  **************************/
 
 static inline unsigned int cpuid_eax(unsigned int op) { return 0; };
@@ -205,6 +184,5 @@ extern struct bitmask *offline_cpus;
 void get_cpustate(void);
 void print_online_cpus(void);
 void print_offline_cpus(void);
-void print_speed(unsigned long speed, int no_rounding);
 
 #endif /* __CPUPOWERUTILS_HELPERS__ */
diff --git a/tools/power/cpupower/utils/helpers/misc.c b/tools/power/cpupower/utils/helpers/misc.c
index d693c96cd..fc6e34511 100644
--- a/tools/power/cpupower/utils/helpers/misc.c
+++ b/tools/power/cpupower/utils/helpers/misc.c
@@ -3,11 +3,9 @@
 #include <stdio.h>
 #include <errno.h>
 #include <stdlib.h>
-#include <string.h>
 
 #include "helpers/helpers.h"
 #include "helpers/sysfs.h"
-#include "cpufreq.h"
 
 #if defined(__i386__) || defined(__x86_64__)
 
@@ -41,8 +39,6 @@ int cpufreq_has_boost_support(unsigned int cpu, int *support, int *active,
 			if (ret)
 				return ret;
 		}
-	} else if (cpupower_cpu_info.caps & CPUPOWER_CAP_AMD_PSTATE) {
-		amd_pstate_boost_init(cpu, support, active);
 	} else if (cpupower_cpu_info.caps & CPUPOWER_CAP_INTEL_IDA)
 		*support = *active = 1;
 	return 0;
@@ -87,22 +83,6 @@ int cpupower_intel_set_perf_bias(unsigned int cpu, unsigned int val)
 	return 0;
 }
 
-bool cpupower_amd_pstate_enabled(void)
-{
-	char *driver = cpufreq_get_driver(0);
-	bool ret = false;
-
-	if (!driver)
-		return ret;
-
-	if (!strcmp(driver, "amd-pstate"))
-		ret = true;
-
-	cpufreq_put_driver(driver);
-
-	return ret;
-}
-
 #endif /* #if defined(__i386__) || defined(__x86_64__) */
 
 /* get_cpustate
@@ -164,45 +144,3 @@ void print_offline_cpus(void)
 		printf(_("cpupower set operation was not performed on them\n"));
 	}
 }
-
-/*
- * print_speed
- *
- * Print the exact CPU frequency with appropriate unit
- */
-void print_speed(unsigned long speed, int no_rounding)
-{
-	unsigned long tmp;
-
-	if (no_rounding) {
-		if (speed > 1000000)
-			printf("%u.%06u GHz", ((unsigned int) speed/1000000),
-				((unsigned int) speed%1000000));
-		else if (speed > 1000)
-			printf("%u.%03u MHz", ((unsigned int) speed/1000),
-				(unsigned int) (speed%1000));
-		else
-			printf("%lu kHz", speed);
-	} else {
-		if (speed > 1000000) {
-			tmp = speed%10000;
-			if (tmp >= 5000)
-				speed += 10000;
-			printf("%u.%02u GHz", ((unsigned int) speed/1000000),
-				((unsigned int) (speed%1000000)/10000));
-		} else if (speed > 100000) {
-			tmp = speed%1000;
-			if (tmp >= 500)
-				speed += 1000;
-			printf("%u MHz", ((unsigned int) speed/1000));
-		} else if (speed > 1000) {
-			tmp = speed%100;
-			if (tmp >= 50)
-				speed += 100;
-			printf("%u.%01u MHz", ((unsigned int) speed/1000),
-				((unsigned int) (speed%1000)/100));
-		}
-	}
-
-	return;
-}
-- 
2.35.1.273.ge6ebfd0e8c

