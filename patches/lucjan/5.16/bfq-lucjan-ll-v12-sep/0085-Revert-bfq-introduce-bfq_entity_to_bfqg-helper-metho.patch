From f3fb6c041fc7b7a6faddbef4ac26bb7006de842f Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Mon, 7 Mar 2022 12:05:54 +0100
Subject: [PATCH 085/104] Revert "bfq: introduce bfq_entity_to_bfqg helper
 method"

This reverts commit 78e6f2ec0b36bdd83cfb0a2805cbbea538258d03.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 block/bfq-cgroup.c  |  6 ++++--
 block/bfq-iosched.h |  1 -
 block/bfq-wf2q.c    | 16 ++++------------
 3 files changed, 8 insertions(+), 15 deletions(-)

diff --git a/block/bfq-cgroup.c b/block/bfq-cgroup.c
index 4b82a60c4..402f34820 100644
--- a/block/bfq-cgroup.c
+++ b/block/bfq-cgroup.c
@@ -309,7 +309,8 @@ struct bfq_group *bfqq_group(struct bfq_queue *bfqq)
 {
 	struct bfq_entity *group_entity = bfqq->entity.parent;
 
-	return group_entity ? bfq_entity_to_bfqg(group_entity) :
+	return group_entity ? container_of(group_entity, struct bfq_group,
+					   entity) :
 			      bfqq->bfqd->root_group;
 }
 
@@ -614,7 +615,8 @@ struct bfq_group *bfq_find_set_group(struct bfq_data *bfqd,
 	 */
 	entity = &bfqg->entity;
 	for_each_entity(entity) {
-		struct bfq_group *curr_bfqg = bfq_entity_to_bfqg(entity);
+		struct bfq_group *curr_bfqg = container_of(entity,
+						struct bfq_group, entity);
 		if (curr_bfqg != bfqd->root_group) {
 			parent = bfqg_parent(curr_bfqg);
 			if (!parent)
diff --git a/block/bfq-iosched.h b/block/bfq-iosched.h
index 9950b4860..b952ad63c 100644
--- a/block/bfq-iosched.h
+++ b/block/bfq-iosched.h
@@ -1062,7 +1062,6 @@ extern struct blkcg_policy blkcg_policy_bfq;
 
 struct bfq_group *bfq_bfqq_to_bfqg(struct bfq_queue *bfqq);
 struct bfq_queue *bfq_entity_to_bfqq(struct bfq_entity *entity);
-struct bfq_group *bfq_entity_to_bfqg(struct bfq_entity *entity);
 unsigned int bfq_tot_busy_queues(struct bfq_data *bfqd);
 struct bfq_service_tree *bfq_entity_service_tree(struct bfq_entity *entity);
 struct bfq_entity *bfq_entity_of(struct rb_node *node);
diff --git a/block/bfq-wf2q.c b/block/bfq-wf2q.c
index 0656645e3..b5ea8bf74 100644
--- a/block/bfq-wf2q.c
+++ b/block/bfq-wf2q.c
@@ -149,7 +149,7 @@ struct bfq_group *bfq_bfqq_to_bfqg(struct bfq_queue *bfqq)
 	if (!group_entity)
 		group_entity = &bfqq->bfqd->root_group->entity;
 
-	return bfq_entity_to_bfqg(group_entity);
+	return container_of(group_entity, struct bfq_group, entity);
 }
 
 /*
@@ -208,7 +208,7 @@ static bool bfq_no_longer_next_in_service(struct bfq_entity *entity)
 	if (bfq_entity_to_bfqq(entity))
 		return true;
 
-	bfqg = bfq_entity_to_bfqg(entity);
+	bfqg = container_of(entity, struct bfq_group, entity);
 
 	/*
 	 * The field active_entities does not always contain the
@@ -266,15 +266,6 @@ struct bfq_queue *bfq_entity_to_bfqq(struct bfq_entity *entity)
 	return bfqq;
 }
 
-struct bfq_group *bfq_entity_to_bfqg(struct bfq_entity *entity)
-{
-	struct bfq_group *bfqg = NULL;
-
-	if (entity->my_sched_data)
-		bfqg = container_of(entity, struct bfq_group, entity);
-
-	return bfqg;
-}
 
 /**
  * bfq_delta - map service into the virtual time domain.
@@ -1011,7 +1002,8 @@ static void __bfq_activate_entity(struct bfq_entity *entity,
 
 #ifdef CONFIG_BFQ_GROUP_IOSCHED
 	if (!bfq_entity_to_bfqq(entity)) { /* bfq_group */
-		struct bfq_group *bfqg = bfq_entity_to_bfqg(entity);
+		struct bfq_group *bfqg =
+			container_of(entity, struct bfq_group, entity);
 		struct bfq_data *bfqd = bfqg->bfqd;
 
 		if (!entity->in_groups_with_pending_reqs) {
-- 
2.35.1.354.g715d08a9e5

