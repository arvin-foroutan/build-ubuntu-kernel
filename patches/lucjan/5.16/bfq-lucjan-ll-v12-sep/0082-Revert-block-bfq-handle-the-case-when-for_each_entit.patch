From 2ac1a8c925a6228573e4dd28232b5e4c936fdcfd Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Sat, 5 Mar 2022 20:23:48 +0100
Subject: [PATCH 082/104] Revert "block, bfq: handle the case when
 for_each_entity() access root group"

This reverts commit 7105f0380b1b7cabfcbc0b249d35fc2a88aea6ba.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 block/bfq-iosched.c |  2 +-
 block/bfq-wf2q.c    | 17 ++++-------------
 2 files changed, 5 insertions(+), 14 deletions(-)

diff --git a/block/bfq-iosched.c b/block/bfq-iosched.c
index 266c286e6..94f3c5dcf 100644
--- a/block/bfq-iosched.c
+++ b/block/bfq-iosched.c
@@ -972,7 +972,7 @@ void bfq_weights_tree_remove(struct bfq_data *bfqd,
 	for_each_entity(entity) {
 		struct bfq_sched_data *sd = entity->my_sched_data;
 
-		if (sd && (sd->next_in_service || sd->in_service_entity)) {
+		if (sd->next_in_service || sd->in_service_entity) {
 			/*
 			 * entity is still active, because either
 			 * next_in_service or in_service_entity is not
diff --git a/block/bfq-wf2q.c b/block/bfq-wf2q.c
index 757be0a0b..3190748e9 100644
--- a/block/bfq-wf2q.c
+++ b/block/bfq-wf2q.c
@@ -975,13 +975,6 @@ static void __bfq_activate_entity(struct bfq_entity *entity,
 	bool backshifted = false;
 	unsigned long long min_vstart;
 
-	if (is_root_entity(entity))
-#ifdef CONFIG_BFQ_GROUP_IOSCHED
-		goto update;
-#else
-		return;
-#endif
-
 	/* See comments on bfq_fqq_update_budg_for_activation */
 	if (non_blocking_wait_rq && bfq_gt(st->vtime, entity->finish)) {
 		backshifted = true;
@@ -1016,10 +1009,7 @@ static void __bfq_activate_entity(struct bfq_entity *entity,
 		entity->on_st_or_in_serv = true;
 	}
 
-	bfq_update_fin_time_enqueue(entity, st, backshifted);
-
 #ifdef CONFIG_BFQ_GROUP_IOSCHED
-update:
 	if (!bfq_entity_to_bfqq(entity)) { /* bfq_group */
 		struct bfq_group *bfqg = bfq_entity_to_bfqg(entity);
 		struct bfq_data *bfqd = bfqg->bfqd;
@@ -1030,6 +1020,8 @@ static void __bfq_activate_entity(struct bfq_entity *entity,
 		}
 	}
 #endif
+
+	bfq_update_fin_time_enqueue(entity, st, backshifted);
 }
 
 /**
@@ -1119,8 +1111,7 @@ static void __bfq_activate_requeue_entity(struct bfq_entity *entity,
 {
 	struct bfq_service_tree *st = bfq_entity_service_tree(entity);
 
-	if (sd && (sd->in_service_entity == entity ||
-		   entity->tree == &st->active))
+	if (sd->in_service_entity == entity || entity->tree == &st->active)
 		 /*
 		  * in service or already queued on the active tree,
 		  * requeue or reposition
@@ -1158,7 +1149,7 @@ static void bfq_activate_requeue_entity(struct bfq_entity *entity,
 		sd = entity->sched_data;
 		__bfq_activate_requeue_entity(entity, sd, non_blocking_wait_rq);
 
-		if (sd && !bfq_update_next_in_service(sd, entity, expiration) &&
+		if (!bfq_update_next_in_service(sd, entity, expiration) &&
 		    !requeue)
 			break;
 	}
-- 
2.35.1.354.g715d08a9e5

