From ada789a9d3ccbd2e9e8bcc5b96527f4592e165f8 Mon Sep 17 00:00:00 2001
From: Piotr Gorski <lucjan.lucjanov@gmail.com>
Date: Wed, 5 Jan 2022 13:48:14 +0100
Subject: [PATCH 46/48] Revert "btrfs: fix reserved space leak on log tree
 nodes after transaction abort"

This reverts commit eac92caa849ff3ea098e676351f07bedd1dc273d.

Signed-off-by: Piotr Gorski <lucjan.lucjanov@gmail.com>
---
 fs/btrfs/tree-log.c | 32 ++------------------------------
 1 file changed, 2 insertions(+), 30 deletions(-)

diff --git a/fs/btrfs/tree-log.c b/fs/btrfs/tree-log.c
index b137584..5f234c3 100644
--- a/fs/btrfs/tree-log.c
+++ b/fs/btrfs/tree-log.c
@@ -3397,32 +3397,6 @@ int btrfs_sync_log(struct btrfs_trans_handle *trans,
 	return ret;
 }
 
-/*
- * If when freeing a log tree we fail to iterate over the entire tree due to a
- * past writeback failure, then we have not properly freed every metadata extent.
- * In that case we use this function that does not iterate the log tree but it
- * still adjusts the reserved bytes in the block group of each metadata extent.
- */
-static void unaccount_all_log_buffers(struct btrfs_root *log)
-{
-	struct btrfs_fs_info *fs_info = log->fs_info;
-	u64 start = 0;
-	u64 end;
-
-	while (!find_first_extent_bit(&log->dirty_log_pages, start, &start, &end,
-		      EXTENT_DIRTY | EXTENT_NEW | EXTENT_NEED_WAIT, NULL)) {
-		u64 bytenr;
-
-		for (bytenr = start; bytenr < end; bytenr += fs_info->nodesize) {
-			unaccount_log_buffer(fs_info, bytenr);
-			cond_resched();
-		}
-
-		start = end + 1;
-	}
-
-}
-
 static void free_log_tree(struct btrfs_trans_handle *trans,
 			  struct btrfs_root *log)
 {
@@ -3435,12 +3409,10 @@ static void free_log_tree(struct btrfs_trans_handle *trans,
 	if (log->node) {
 		ret = walk_log_tree(trans, log, &wc);
 		if (ret) {
-			if (trans) {
+			if (trans)
 				btrfs_abort_transaction(trans, ret);
-			} else {
+			else
 				btrfs_handle_fs_error(log->fs_info, ret, NULL);
-				unaccount_all_log_buffers(log);
-			}
 		}
 	}
 
-- 
2.34.1.75.gabe6bb3905

