From 391b5148ff93fdbd237a994eb09f7b6cb510fd84 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Wed, 19 May 2021 10:56:37 +0000
Subject: [PATCH 158/232] sched/pds: Refine task_sched_prio() and
 task_sched_prio_idx()

idle task should never be queued/dequued/requeued or be woken.
---
 kernel/sched/pds.h | 20 +++++++-------------
 1 file changed, 7 insertions(+), 13 deletions(-)

diff --git a/kernel/sched/pds.h b/kernel/sched/pds.h
index 64631b2770fe..62b5ab738876 100644
--- a/kernel/sched/pds.h
+++ b/kernel/sched/pds.h
@@ -36,26 +36,20 @@ task_sched_prio_normal(const struct task_struct *p, const struct rq *rq)
 static inline int
 task_sched_prio(const struct task_struct *p, const struct rq *rq)
 {
-	if (p == rq->idle)
-		return IDLE_TASK_SCHED_PRIO;
-
-	if (p->prio < MAX_RT_PRIO)
-		return p->prio;
+	if (p->prio >= MAX_RT_PRIO)
+		return MAX_RT_PRIO + task_sched_prio_normal(p, rq);
 
-	return MAX_RT_PRIO + task_sched_prio_normal(p, rq);
+	return p->prio;
 }
 
 static inline int
 task_sched_prio_idx(const struct task_struct *p, const struct rq *rq)
 {
-	if (p == rq->idle)
-		return IDLE_TASK_SCHED_PRIO;
-
-	if (p->prio < MAX_RT_PRIO)
-		return p->prio;
+	if (p->prio >= MAX_RT_PRIO)
+		return MAX_RT_PRIO +
+			(task_sched_prio_normal(p, rq) + rq->time_edge) % 20;
 
-	return MAX_RT_PRIO +
-		(task_sched_prio_normal(p, rq) + rq->time_edge) % 20;
+	return p->prio;
 }
 
 static inline unsigned long sched_prio2idx(unsigned long idx, struct rq *rq)
-- 
2.33.1.711.g9d530dc002

