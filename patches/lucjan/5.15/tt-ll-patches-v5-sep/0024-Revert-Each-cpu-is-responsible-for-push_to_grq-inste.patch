From ed84eae724ec81515b09284d0e33426b1aa35fd1 Mon Sep 17 00:00:00 2001
From: Hamad Al Marri <hamad.s.almarri@gmail.com>
Date: Mon, 13 Dec 2021 13:11:45 +0300
Subject: [PATCH 24/29] Revert "Each cpu is responsible for `push_to_grq`,
 instead of CPU0"

This reverts commit 718b2872e8bc504412ec92d3f2ffe35e283d0a5a.
---
 kernel/sched/bs.c      |  2 --
 kernel/sched/bs_nohz.h | 30 ++++++++++++++++++++----------
 2 files changed, 20 insertions(+), 12 deletions(-)

diff --git a/kernel/sched/bs.c b/kernel/sched/bs.c
index e72b0357a..f7d8b9c54 100644
--- a/kernel/sched/bs.c
+++ b/kernel/sched/bs.c
@@ -1697,8 +1697,6 @@ void trigger_load_balance(struct rq *this_rq)
 			idle_pull_global_candidate(this_rq);
 		else
 			active_pull_global_candidate(this_rq, 1);
-	} else if (IS_GRQ_BL_ENABLED) {
-		push_to_grq(this_rq);
 	}
 
 	if (this_cpu != 0)
diff --git a/kernel/sched/bs_nohz.h b/kernel/sched/bs_nohz.h
index 78b1062b1..017e29278 100644
--- a/kernel/sched/bs_nohz.h
+++ b/kernel/sched/bs_nohz.h
@@ -825,34 +825,44 @@ static void nohz_try_pull_from_grq(void)
 {
 	int cpu;
 	struct rq *rq;
+	struct cpumask idle_mask;
 	struct cpumask non_idle_mask;
-	bool balance;
+	bool balance_time;
 	int pulled = 0;
 
 	cpumask_clear(&non_idle_mask);
 
+	/* first, push to grq*/
 	for_each_online_cpu(cpu) {
 		if (cpu == 0) continue;
-		rq = cpu_rq(cpu);
-		pulled = 0;
-
-		if (idle_cpu(cpu))
-			pulled = pull_from_grq(rq);
-		else
+		if (!idle_cpu(cpu)) {
+			push_to_grq(cpu_rq(cpu));
 			cpumask_set_cpu(cpu, &non_idle_mask);
+		} else {
+			cpumask_set_cpu(cpu, &idle_mask);
+		}
+	}
+
+	/* second, idle cpus pull first */
+	for_each_cpu(cpu, &idle_mask) {
+		if (cpu == 0 || !idle_cpu(cpu))
+			continue;
 
+		rq = cpu_rq(cpu);
+		pulled = pull_from_grq(rq);
 		update_grq_next_balance(rq, pulled);
 	}
 
+	/* last, non idle pull */
 	for_each_cpu(cpu, &non_idle_mask) {
 		rq = cpu_rq(cpu);
-		balance = time_after_eq(jiffies, rq->grq_next_balance);
+		balance_time = time_after_eq(jiffies, rq->grq_next_balance);
 		pulled = 0;
 
 		/* mybe it is idle now */
 		if (idle_cpu(cpu))
-			pulled = pull_from_grq(rq);
-		else if (tt_grq_balance_ms == 0 || balance)
+			pulled = pull_from_grq(cpu_rq(cpu));
+		else if (tt_grq_balance_ms == 0 || balance_time)
 			/* if not idle, try pull every grq_next_balance */
 			pulled = try_pull_from_grq(rq);
 
-- 
2.34.1.75.gabe6bb3905

