From a57fdfbd841170ee7cf61260be3e2992ae5bf508 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Sun, 1 Aug 2021 09:17:30 +0000
Subject: [PATCH 1/2] sched/alt: Optimize sched_exec()

Improve exec performance under heavy load.
Kernel compilation comparation
>>>>>16 job(s)
1m21.148s(baseline) --> 1m19.474s (- ~2.06%)
>>>>>24 job(s)
1m22.362s(baseline) --> 1m19.771s (- ~3.15%)
---
 kernel/sched/alt_core.c | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index e296d56e85f0..b5e91c874cc1 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -3321,15 +3321,9 @@ void sched_exec(void)
 	struct task_struct *p = current;
 	unsigned long flags;
 	int dest_cpu;
-	struct rq *rq;
 
 	raw_spin_lock_irqsave(&p->pi_lock, flags);
-	rq = this_rq();
-
-	if (rq != task_rq(p) || rq->nr_running < 2)
-		goto unlock;
-
-	dest_cpu = select_task_rq(p);
+	dest_cpu = cpumask_any(p->cpus_ptr);
 	if (dest_cpu == smp_processor_id())
 		goto unlock;
 
-- 
2.33.0

